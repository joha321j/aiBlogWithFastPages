{
  
    
        "post0": {
            "title": "Exercises Week 8",
            "content": "How does pixel similarity approach to classifying digits works? Opstil matrix, der repræsenterer billedet, hvert koordinat repræsenterer et pixel. Man kan nu sammenligne denne matrice med en idéel udgave af det, som man skal klassificere mod, ved at se på, hvor stor forskel der er på den idéelle matrix og billedmatrixen. Forskellen udregnes typisk med root mean square (L2 norm) eller mean of absolute differences(L1 norm). . numberList = [1, 2, 3, 4, 7, 8, 9] evenNumbers = [number * 2 for number in numberList if number % 2 != 0] evenNumbers . [2, 6, 14, 18] . What is a rank-3 tensor? En tensors rank beskriver hvor mange unikke datatyper den tensor indeholder. Dette har ikke noget med størrelsen eller mængden af data at gøre, men hvad dataen beskriver. . What are RMSE and L1 norm? Root mean square error - tag kvadratet af forskellen inden man tager gennemsnittet og tag derefter kvadratroden af gennemsnittet mean of absolute differences - tag den absolute værdi af forskellene inden man tager gennensmittet . import torch as t data = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] dataTensor = t.tensor(data) doubledTensor = dataTensor * 2 doubledTensor doubledTensor[1:, 1:] . tensor([[10, 12], [16, 18]]) . What is broadcasting? Automatically expand the tensor with the smaller rank to have the same size as the one with the larger rank. . Are metrics generally calculated using the training set, or the validation set? Why? Metrics udregnes på valideringssættet, da de fortæller os, hvor gode vores model er. . What is SGD? Stochastic Gradient Descent En iterativ måde at optimere vores model via gradienter. Learning raten angiver hvor store skridt man ta&#39;r mellem hver iteration. . What are the seven steps in SGD for machine learning? . Initialize the weights. | For each image, use these weights to predict whether it appears to be a 3 or a 7. | Based on these predictions, calculate how good the model is (its loss). | Calculate the gradient, which measures for each weight how changing that weight would change the loss. | Step (that is, change) all the weights based on that calculation. | Go back to step 2 and repeat the process. | Iterate until you decide to stop the training process (for instance, because the model is good enough or you don’t want to wait any longer). | How do we initialize the weights in a model? Randomly, fordi vi allerede ved, at vi har en måde at forbedre dem. . What is &quot;loss&quot;? This is what Samuel referred to when he spoke of testing the effectiveness of any current weight assignment in terms of actual performance. We need a function that will return a number that is small if the performance of the model is good . Why can&#39;t we always use a high learning rate? Vi risikerere at oversteppe de idelle vægte . What is a &quot;gradient&quot;? Differentialet af metoden . Why can&#39;t we use accuracy as a loss function? Små ændringer i vægtene vil ofte ikke have en indflydelse på vores accuracy, hvilket betyder at hvis accuracy bli&#39;r brugt vil det være meget små gradientværdier og derfor vil modellen ikke lære noget. . What is the difference between a loss function and a metric? A loss function is used to train your model. A metric is used to evaluate your model. A loss function is used during the learning process. A metric is used after the learning process. . What is the function to calculate new weights using a learning rate? backward() . What does the backward method do? The “backward” here refers to backpropagation, which is the name given to the process of calculating the derivative of each layer. We’ll see how this is done exactly in Chapter 17, when we calculate the gradients of a deep neural net from scratch. This is called the backward pass of the network, as opposed to the forward pass, which is where the activations are calculated. Life would probably be easier if backward was just called calculate_grad, but deep learning folks really do like to add jargon everywhere they can! .",
            "url": "https://joha321j.github.io/aiBlogWithFastPages/jupyter/2021/03/23/Exercises.html",
            "relUrl": "/jupyter/2021/03/23/Exercises.html",
            "date": " • Mar 23, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Hotdog Classifier",
            "content": "# Fast book setup import fastbook fastbook.setup_book() from fastbook import * from fastai.vision.widgets import * . conf_id = &quot;efb1b149-c219-4091-be6d-14a279c405c4&quot; key_id = &quot;1be3ada0f2a649d087e9fb39798485a0&quot; #Define method to search bing for images def search_images_bing_new(key, term, customConfigId, min_sz=128): url = &#39;https://api.bing.microsoft.com/v7.0/custom/images/search?&#39; + &#39;q=&#39; + term + &#39;&amp;&#39; + &#39;customconfig=&#39; + customConfigId + &#39;&amp;&#39; + &#39;count=150&#39; r = requests.get(url, headers={&#39;Ocp-Apim-Subscription-Key&#39;: key}) search_results = r.json() return L([img[&quot;thumbnailUrl&quot;] for img in search_results[&quot;value&quot;][:150]]) . ims = search_images_bing_new(key_id, &#39;hot dog&#39;, conf_id) len(ims) . 150 . dest = &#39;images/hot_dog.jpg&#39; download_url(ims[0], dest) im = Image.open(dest) im.to_thumb(128,128) . image_types = &#39;hot dog&#39;, &#39;burger&#39; path = Path(&#39;foods&#39;) if not path.exists(): path.mkdir() for o in image_types: dest = (path/o) dest.mkdir(exist_ok=True) results = search_images_bing_new(key_id, o, conf_id) download_images(dest, urls=results) fns = get_image_files(path) failed = verify_images(fns) failed.map(Path.unlink) . (#0) [] . food = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, splitter=RandomSplitter(valid_pct=.2, seed = 42), get_y=parent_label, item_tfms=RandomResizedCrop(224, min_scale=0.5) ) dls = food.dataloaders(path) dls.valid.show_batch(max_n=4, nrows=1) . learn = cnn_learner(dls, resnet18, metrics=error_rate) learn.fine_tune(4) . epoch train_loss valid_loss error_rate time . 0 | 1.226112 | 0.206438 | 0.083333 | 00:03 | . epoch train_loss valid_loss error_rate time . 0 | 0.343744 | 0.164238 | 0.050000 | 00:04 | . 1 | 0.246327 | 0.101516 | 0.066667 | 00:03 | . 2 | 0.167483 | 0.097955 | 0.050000 | 00:03 | . 3 | 0.126819 | 0.106567 | 0.050000 | 00:03 | . interp = ClassificationInterpretation.from_learner(learn) interp.plot_confusion_matrix() interp.plot_top_losses(5, nrows=1) . cleaner = ImageClassifierCleaner(learn) cleaner . for idx in cleaner.delete(): cleaner.fns[idx].unlink() . btn_upload = widgets.FileUpload() btn_upload . img = PILImage.create(btn_upload.data[-1]) . out_pl = widgets.Output() out_pl.clear_output() with out_pl: display(img.to_thumb(128,128)) out_pl . pred,pred_idx,probs = learn_inf.predict(img) . NameError Traceback (most recent call last) &lt;ipython-input-18-9a18687b977c&gt; in &lt;module&gt; -&gt; 1 pred,pred_idx,probs = learn_inf.predict(img) NameError: name &#39;learn_inf&#39; is not defined . lbl_pred = widgets.Label() lbl_pred.value = f&#39;Prediction: {pred}; Probability: {probs[pred_idx]:.04f}&#39; lbl_pred . NameError Traceback (most recent call last) &lt;ipython-input-17-fb9bca207f6f&gt; in &lt;module&gt; 1 lbl_pred = widgets.Label() -&gt; 2 lbl_pred.value = f&#39;Prediction: {pred}; Probability: {probs[pred_idx]:.04f}&#39; 3 lbl_pred NameError: name &#39;pred&#39; is not defined . btn_run = widgets.Button(description=&#39;Classify&#39;) btn_run . def on_click_classify(change): img = PILImage.create(btn_upload.data[-1]) out_pl.clear_output() with out_pl: display(img.to_thumb(128,128)) pred,pred_idx,probs = learn_inf.predict(img) lbl_pred.value = f&#39;Prediction: {pred}; Probability: {probs[pred_idx]:.04f}&#39; btn_run.on_click(on_click_classify) . VBox([widgets.Label(&#39;Select your bear!&#39;), btn_upload, btn_run, out_pl, lbl_pred]) . !pip install voila !jupyter serverextension enable voila --sys-prefix . Collecting voila Downloading voila-0.2.6-py3-none-any.whl (1.9 MB) |████████████████████████████████| 1.9 MB 15.1 MB/s eta 0:00:01 Requirement already satisfied: nbclient&lt;0.6,&gt;=0.4.0 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from voila) (0.5.1) Collecting nbconvert&lt;7,&gt;=6.0.0 Downloading nbconvert-6.0.7-py3-none-any.whl (552 kB) |████████████████████████████████| 552 kB 48.8 MB/s eta 0:00:01 Collecting jupyter-server&lt;2.0.0,&gt;=0.3.0 Downloading jupyter_server-1.3.0-py3-none-any.whl (188 kB) |████████████████████████████████| 188 kB 51.0 MB/s eta 0:00:01 Requirement already satisfied: jupyter-client&lt;7,&gt;=6.1.3 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from voila) (6.1.7) Requirement already satisfied: traitlets&gt;=4.2 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbclient&lt;0.6,&gt;=0.4.0-&gt;voila) (5.0.5) Requirement already satisfied: async-generator in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbclient&lt;0.6,&gt;=0.4.0-&gt;voila) (1.10) Requirement already satisfied: nbformat&gt;=5.0 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbclient&lt;0.6,&gt;=0.4.0-&gt;voila) (5.0.8) Requirement already satisfied: nest-asyncio in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbclient&lt;0.6,&gt;=0.4.0-&gt;voila) (1.4.3) Requirement already satisfied: jupyterlab-pygments in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (0.1.2) Requirement already satisfied: defusedxml in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (0.6.0) Requirement already satisfied: testpath in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (0.4.4) Requirement already satisfied: pygments&gt;=2.4.1 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (2.7.2) Requirement already satisfied: bleach in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (3.2.1) Requirement already satisfied: mistune&lt;2,&gt;=0.8.1 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (0.8.4) Requirement already satisfied: pandocfilters&gt;=1.4.1 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (1.4.2) Requirement already satisfied: jupyter-core in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (4.7.0) Requirement already satisfied: jinja2&gt;=2.4 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (2.11.2) Requirement already satisfied: entrypoints&gt;=0.2.2 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (0.3) Requirement already satisfied: ipython-genutils in /opt/conda/envs/fastai/lib/python3.8/site-packages (from jupyter-server&lt;2.0.0,&gt;=0.3.0-&gt;voila) (0.2.0) Requirement already satisfied: prometheus-client in /opt/conda/envs/fastai/lib/python3.8/site-packages (from jupyter-server&lt;2.0.0,&gt;=0.3.0-&gt;voila) (0.9.0) Requirement already satisfied: pyzmq&gt;=17 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from jupyter-server&lt;2.0.0,&gt;=0.3.0-&gt;voila) (20.0.0) Requirement already satisfied: Send2Trash in /opt/conda/envs/fastai/lib/python3.8/site-packages (from jupyter-server&lt;2.0.0,&gt;=0.3.0-&gt;voila) (1.5.0) Requirement already satisfied: terminado&gt;=0.8.3 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from jupyter-server&lt;2.0.0,&gt;=0.3.0-&gt;voila) (0.9.1) Requirement already satisfied: tornado&gt;=6.1.0 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from jupyter-server&lt;2.0.0,&gt;=0.3.0-&gt;voila) (6.1) Collecting anyio&gt;=2.0.2 Downloading anyio-2.1.0-py3-none-any.whl (64 kB) |████████████████████████████████| 64 kB 4.1 MB/s eta 0:00:01 Requirement already satisfied: python-dateutil&gt;=2.1 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from jupyter-client&lt;7,&gt;=6.1.3-&gt;voila) (2.8.1) Requirement already satisfied: jsonschema!=2.5.0,&gt;=2.4 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from nbformat&gt;=5.0-&gt;nbclient&lt;0.6,&gt;=0.4.0-&gt;voila) (3.2.0) Requirement already satisfied: webencodings in /opt/conda/envs/fastai/lib/python3.8/site-packages (from bleach-&gt;nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (0.5.1) Requirement already satisfied: six&gt;=1.9.0 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from bleach-&gt;nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (1.15.0) Requirement already satisfied: packaging in /opt/conda/envs/fastai/lib/python3.8/site-packages (from bleach-&gt;nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (20.4) Requirement already satisfied: MarkupSafe&gt;=0.23 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from jinja2&gt;=2.4-&gt;nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (1.1.1) Requirement already satisfied: ptyprocess; os_name != &#34;nt&#34; in /opt/conda/envs/fastai/lib/python3.8/site-packages (from terminado&gt;=0.8.3-&gt;jupyter-server&lt;2.0.0,&gt;=0.3.0-&gt;voila) (0.6.0) Requirement already satisfied: idna&gt;=2.8 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from anyio&gt;=2.0.2-&gt;jupyter-server&lt;2.0.0,&gt;=0.3.0-&gt;voila) (2.10) Collecting sniffio&gt;=1.1 Downloading sniffio-1.2.0-py3-none-any.whl (10 kB) Requirement already satisfied: setuptools in /opt/conda/envs/fastai/lib/python3.8/site-packages (from jsonschema!=2.5.0,&gt;=2.4-&gt;nbformat&gt;=5.0-&gt;nbclient&lt;0.6,&gt;=0.4.0-&gt;voila) (49.6.0.post20201009) Requirement already satisfied: pyrsistent&gt;=0.14.0 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from jsonschema!=2.5.0,&gt;=2.4-&gt;nbformat&gt;=5.0-&gt;nbclient&lt;0.6,&gt;=0.4.0-&gt;voila) (0.17.3) Requirement already satisfied: attrs&gt;=17.4.0 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from jsonschema!=2.5.0,&gt;=2.4-&gt;nbformat&gt;=5.0-&gt;nbclient&lt;0.6,&gt;=0.4.0-&gt;voila) (20.3.0) Requirement already satisfied: pyparsing&gt;=2.0.2 in /opt/conda/envs/fastai/lib/python3.8/site-packages (from packaging-&gt;bleach-&gt;nbconvert&lt;7,&gt;=6.0.0-&gt;voila) (2.4.7) Installing collected packages: nbconvert, sniffio, anyio, jupyter-server, voila Attempting uninstall: nbconvert Found existing installation: nbconvert 5.6.1 Uninstalling nbconvert-5.6.1: Successfully uninstalled nbconvert-5.6.1 ERROR: After October 2020 you may experience errors when installing or updating packages. This is because pip will change the way that it resolves dependency conflicts. We recommend you use --use-feature=2020-resolver to test your packages with the new resolver before it becomes the default. nbdev 1.1.5 requires nbconvert&lt;6, but you&#39;ll have nbconvert 6.0.7 which is incompatible. Successfully installed anyio-2.1.0 jupyter-server-1.3.0 nbconvert-6.0.7 sniffio-1.2.0 voila-0.2.6 Enabling: voila - Writing config: /opt/conda/envs/fastai/etc/jupyter - Validating... voila 0.2.6 OK .",
            "url": "https://joha321j.github.io/aiBlogWithFastPages/jupyter/2021/02/16/HotdogClassifier.html",
            "relUrl": "/jupyter/2021/02/16/HotdogClassifier.html",
            "date": " • Feb 16, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://joha321j.github.io/aiBlogWithFastPages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://joha321j.github.io/aiBlogWithFastPages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://joha321j.github.io/aiBlogWithFastPages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://joha321j.github.io/aiBlogWithFastPages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}